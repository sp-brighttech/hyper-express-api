{
  "openapi": "3.0.0",
  "info": {
    "title": "User Authentication API",
    "version": "1.0.0",
    "description": "API endpoints for user registration and login."
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Endpoint for registering a new user with company and contact details.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "company_name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 100,
                    "example": "Example Corp"
                  },
                  "industry": {
                    "type": "string",
                    "enum": [
                      "Technology",
                      "Healthcare",
                      "Retail",
                      "Finance",
                      "Education",
                      "Other"
                    ],
                    "example": "Technology"
                  },
                  "company_size": {
                    "type": "string",
                    "enum": [
                      "1–10",
                      "11–50",
                      "51–200",
                      "201–500",
                      "501–1000",
                      "1000+"
                    ],
                    "example": "11–50"
                  },
                  "website_url": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://www.example.com"
                  },
                  "contact_name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50,
                    "example": "John Doe"
                  },
                  "job_title": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "CTO"
                  },
                  "email_address": {
                    "type": "string",
                    "format": "email",
                    "example": "johndoe@example.com"
                  },
                  "phone_number": {
                    "type": "string",
                    "minLength": 7,
                    "maxLength": 15,
                    "example": "+1234567890"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 30,
                    "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])",
                    "example": "SecurePass123!"
                  }
                },
                "required": [
                  "companyName",
                  "industry",
                  "companySize",
                  "websiteURL",
                  "primaryContactName",
                  "email",
                  "phoneNumber",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User registered successfully."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Request body contains invalid data. Please correct the following fields."
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "example": "email"
                          },
                          "message": {
                            "type": "string",
                            "example": "Email Address must be a valid email."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login a user",
        "description": "Endpoint for logging in a user with email and password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 30,
                    "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])",
                    "example": "SecurePass123!"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User logged in successfully."
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation Error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Request body contains invalid data. Please correct the following fields."
                    },
                    "details": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string",
                            "example": "password"
                          },
                          "message": {
                            "type": "string",
                            "example": "Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
